@mixin my_google_font($type)
{
  @if $type == 'ssp' {
    @import url('https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,300,300italic,400italic,600,600italic,700,700italic,900,900italic&subset=latin,vietnamese');
  } @else if $type == 'os'{
    @import url('https://fonts.googleapis.com/css?family=Open+Sans:400,300,300italic,400italic,600,600italic,700,700italic,800,800italic&subset=latin,vietnamese');
  } @else if $type == 'nts'{
    @import url('https://fonts.googleapis.com/css?family=Noto+Serif:400,400italic,700italic,700');
  } @else if $type == 'varele'{
    @import url('https://fonts.googleapis.com/css?family=Varela+Round&subset=vietnamese');
  } @else if $type == 'roboto'{
    @import url('https://fonts.googleapis.com/css?family=Roboto:400,400i,500,500i,700,700i,900,900i');
  }
}

@include my_google_font('os');
@include my_google_font('valera');
@include my_google_font('roboto');


@mixin font_roboto(){
  font-family: 'Roboto', sans-serif;
}


@mixin font_rubik($weight, $style: medium){
  @if($weight != $font_rubik_medium ){
    font-family: $rubik, sans-serif;
    @if($weight == $font_rubik_bold){
      font-weight: bold;
    } @else if($weight == $font_rubik_black){
      font-weight: 900;
    } @else {
      font-weight: normal;
    }
  }  @else{
    @if($style == italic ){
      font-family: $font-family-medium-italic;
    }@else {
      font-family: $font-family-medium;
    }

  }

}

@mixin font_open_sans($weight)
{
  font-family: "Open Sans", Arial, sans-serif;
  @if($weight == $font_os_bold){
    font-weight: bold;
  } @else if($weight == $font_os_semibold){
    font-weight: 600;
  } @else if($weight == 'extra-bold'){
    font-weight: bolder;
  } @else {
    font-weight: normal;
  }
}

@mixin font_varela($weight)
{
  font-family: $rubik, sans-serif;
  @if($weight == 'bold'){
    font-weight: bold;
  } @else if($weight == 'semi-bold'){
    font-weight: 600;
  } @else if($weight == 'extra-bold'){
    font-weight: bolder;
  } @else {
    font-weight: normal;
  }  
}

@mixin font_ellefutura($weight)
{
  @if($weight == 'bold'){
    font-family: $font-elleFutura-blod;
  } @else {
    font-family: $font-elleFutura-book;
  }
}



@function pt_to_em($pt){
  $em: 16;
  @return ($pt * 1.33)/$em;
}

@mixin font-size($pt){
  $value: 1;
  @if $pt == 6{
    $value: 0.5
  } @else if($pt == 7){
    $value: 0.55
  } @else if($pt == 7.5){
    $value:0.625
  } @else if($pt == 8){
    $value: 0.7
  } @else if($pt == 9){
    $value: 0.75
  } @else if($pt == 10){
    $value: 0.8
  } @else if($pt == 10.5){
    $value: 0.875
  } @else if($pt == 11){
    $value: 0.95
  } @else if($pt == 12){
    $value: 1
  } @else if($pt == 13){
    $value: 1.05
  } @else if($pt == 13.5){
    $value: 1.125
  } @else if($pt == 14){
    $value: 1.2
  } @else if($pt == 14.5){
    $value: 1.25
  } @else if($pt == 15){
    $value: 1.3
  } @else if($pt == 16){
    $value: 1.4
  } @else if($pt == 17){
    $value: 1.45
  } @else if($pt == 18){
    $value: 1.5
  } @else if($pt == 20){
    $value: 1.6
  } @else if($pt == 22){
    $value: 1.8
  } @else if($pt == 24){
    $value: 2
  } @else if($pt == 26){
    $value: 2.2
  } @else if($pt == 27){
    $value: 2.25
  } @else if($pt == 28){
    $value: 2.3
  } @else if($pt == 29){
    $value: 2.35
  } @else if($pt == 30){
    $value: 2.45
  } @else if($pt == 32){
    $value: 2.55
  } @else if($pt == 34){
    $value: 2.75
  }  @else if($pt == 36){
    $value: 3
  } @else{
    $value: pt_to_em($pt);
  }
  font-size: $value + rem;
}

@function text-stroke($size: 2, $color: #fff, $correction: 0) {
  $radius: $size - $correction;
  $stroke: ();

  @for $i from -$size through $size {
    @for $k from -$size through $size {

      $x: $k;
      $y: $i;

      @if $k > 0 {
        $x: $k - 0.5;
      } @elseif $k < 0 {
        $x: $k + 0.5;
      }

      @if $i > 0 {
        $y: $i - 0.5;
      } @elseif $i < 0 {
        $y: $i + 0.5;
      }

      @if ($x*$x + $y*$y <= $radius*$radius) {
        $stroke: append($stroke, $i*1px $k*1px 0 $color, comma);
      }
    }
  }

  @return $stroke;
}

@mixin text-stroke($size: 2, $color: #fff, $correction: 0) {
  text-shadow: text-stroke($size, $color, $correction);
}

@mixin for-size($size) {
  @if $size == mobile {
    @media (max-width: 1023px) { @content; }
  } @else if $size == desktop {
    @media (min-width: 1024px) { @content; }
  } @else if $size == small-desktop {
    @media (min-width: 1024px) and (max-width: 1199px) { @content; }
  } @else if $size == desktop-large {
    @media (min-width: 1440px) { @content; }
  } @else {
    @media #{$size} {
      @content;
    }
  }
}